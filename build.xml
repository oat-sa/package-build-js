<!--
    requires properties :
     - repo : name of the OAT repository to retrieve the TAO distribution from (needs a composer.json)
     - branch : repository branch
     - extensions: comma separated list of the TAO extensions to include in the build
-->
<project name="build tao js" default="build" basedir=".">

    <target name="clean" description="clean up the build">
        <delete dir="src" />
        <delete dir="reports" />
    </target>

    <target name="prepare" description="prepare the build">
        <mkdir dir="src" />
        <mkdir dir="reports" />
    </target>

    <resolvepath propertyName="src.dir.resolved" file="src" />
    <resolvepath propertyName="reports.dir.resolved" file="reports" />

    <target name="clone" depends="clean,prepare" description="retrieve the target distribution">

        <gitclone repository="git@github.com:oat-sa/${repo}.git" targetPath="src" />

        <gitfetch
            repository="${src.dir.resolved}"
            source="origin"
            refspec="${branch}:${branch}"
        />
        <gitcheckout
            repository="${src.dir.resolved}"
            branchname="${branch}"
        />
        <composer command="install">
             <arg value="--working-dir" />
             <arg path="${src.dir.resolved}" />
         </composer>
    </target>



    <target name="build-js" description="Bundle the JavaScript modules, Compile SASS to CSS, run the tests and the quality checks">

        <copy
            file="${src.dir.resolved}/taoQtiItem/views/js/MathJaxFallback.js"
            tofile="${src.dir.resolved}/taoQtiItem/views/js/mathjax/MathJax.js"
            overwrite="true"
        />

        <copy
            file="resources/messages.json"
            tofile="${src.dir.resolved}/tao/views/locales/en-US/messages.json"
            overwrite="true"
        />

        <copy todir="${src.dir.resolved}/taoQtiItem/views/js/portableSharedLibraries"
            overwrite="true">
            <fileset dir="${src.dir.resolved}/taoQtiItem/install/scripts/portableSharedLibraries">
                <include name="**/*.js" />
                <include name="**/*.css" />
                <include name="**/*.tpl" />
            </fileset>
        </copy>
        
        <exec command="./build-js.sh"           
            checkreturn="false"
            logoutput="true"/>

     
        <foreach list="${extensions}" param="extension" target="lint" />


    </target>

    <target name="lint" description="Run quality checks">
        <echo msg="Lint ${extension}" />
        <exec
            command="./lint.sh ${extension}"
            checkreturn="false"
            logoutput="true"
        />
        <reflexive>
            <fileset dir="reports">
                <include pattern="*-checkstyle.xml" />
            </fileset>
            <filterchain>
                <replaceregexp>
                    <regexp pattern="\.\./src/" replace="src/" />
                </replaceregexp>
            </filterchain>
        </reflexive>
    </target>

    <target name="build" depends="clone,build-js"  description="The full build sequence" />
</project>
